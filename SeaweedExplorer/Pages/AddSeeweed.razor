@page "/seeweed/add"
@inject IDbContextFactory<SeeweedDbContext> ContextFactory

<PageTitle>Add Seeweed</PageTitle>

<h1>Add Seeweed</h1>

<SeeweedForm 
    Seeweed="@Seeweed"
    SeeweedClasses="@SeeweedClasses"
    IsBusy ="@IsBusy"
    OnSubmit="@HandleSubmit"/>

@if (SuccessMessage is not null)
{
    <br />
    <div class="alert alert-success">@SuccessMessage</div>
}
@if (ErrorMessage is not null)
{
    <br />
    <div class="alert alert-danger">@ErrorMessage</div>
}

@code {
    private Seeweed? Seeweed { get; set; }

    private SeeweedClass[]? SeeweedClasses { get; set; }

    private bool IsBusy { get; set; }

    private string? SuccessMessage { get; set; }
    private string? ErrorMessage { get; set; }



    protected override async Task OnInitializedAsync()
    {
        using var context = ContextFactory.CreateDbContext();

        SeeweedClasses = await context.SeeweedClass
                                .OrderBy(c => c.NameCommon)
                                .ToArrayAsync();

        Seeweed = new()
        {
                SeeweedClassId = SeeweedClasses.FirstOrDefault()?.Id
        };

    }

    private async Task HandleSubmit(bool isValid)
    {
        if (isValid)
            await HandleValidSubmit();
        else
            HandleInvalidSubmit();
    }

    private async Task HandleValidSubmit()
    {
        if(IsBusy)
        {
            return;
        }

        IsBusy = true;

        try
        {
            if (Seeweed is not null)
            {
                using var context = ContextFactory.CreateDbContext();

                context.Seeweed.Add(Seeweed);
                await context.SaveChangesAsync();

                SuccessMessage = $"Seeweed: {Seeweed.NameCommon} was added successfully.";
                ErrorMessage = null;

                // New Seeweed for next creation
                Seeweed = new()
                {
                        SeeweedClassId = Seeweed.SeeweedClassId
                };
            }
        }
        catch (Exception e)
        {
            SuccessMessage = null;
            ErrorMessage = $"Error while adding seeweed. Error message: {e.Message}";
        }
        finally
        {
            IsBusy = false;
        }


    }

    private void HandleInvalidSubmit()
    {
        SuccessMessage = null;
        ErrorMessage = null;
    }
}
